generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  AdminID       Int    @id @default(autoincrement())
  NamaAdmin     String @db.VarChar(255)
  EmailAdmin    String @unique(map: "EmailAdmin") @db.VarChar(255)
  PasswordAdmin String @db.VarChar(255)
}

model comment {
  CommentID       Int       @id @default(autoincrement())
  PostID          Int
  UserID          Int
  IsiKomentar     String    @db.Text
  TanggalKomentar DateTime? @default(now()) @db.DateTime(0)
  post            post      @relation(fields: [PostID], references: [PostID], onDelete: Cascade, onUpdate: Restrict, map: "comment_ibfk_1")
  user            user      @relation(fields: [UserID], references: [UserID], onDelete: Cascade, onUpdate: Restrict, map: "comment_ibfk_2")

  @@index([PostID], map: "PostID")
  @@index([UserID], map: "UserID")
}

model like {
  LikeID Int  @id @default(autoincrement())
  PostID Int
  UserID Int
  post   post @relation(fields: [PostID], references: [PostID], onDelete: Cascade, onUpdate: Restrict, map: "like_ibfk_1")
  user   user @relation(fields: [UserID], references: [UserID], onDelete: Cascade, onUpdate: Restrict, map: "like_ibfk_2")

  @@index([PostID], map: "PostID")
  @@index([UserID], map: "UserID")
}

model post {
  PostID      Int       @id @default(autoincrement())
  UserID      Int
  Judul       String    @db.VarChar(255)
  Deskripsi   String    @db.Text
  Kategori    String    @db.VarChar(255)
  TanggalPost DateTime? @default(now()) @db.DateTime(0)
  Media       String?   @db.VarChar(255)
  comment     comment[]
  like        like[]
  user        user      @relation(fields: [UserID], references: [UserID], onDelete: Cascade, onUpdate: Restrict, map: "post_ibfk_1")
  report      report[]

  @@index([UserID], map: "UserID")
}

model report {
  ReportID       Int       @id @default(autoincrement())
  PostID         Int
  UserID         Int
  AlasanLaporan  String    @db.VarChar(255)
  TanggalLaporan DateTime? @default(now()) @db.DateTime(0)
  post           post      @relation(fields: [PostID], references: [PostID], onDelete: Cascade, onUpdate: Restrict, map: "report_ibfk_1")
  user           user      @relation(fields: [UserID], references: [UserID], onDelete: Cascade, onUpdate: Restrict, map: "report_ibfk_2")

  @@index([PostID], map: "PostID")
  @@index([UserID], map: "UserID")
}

model user {
  UserID           Int       @id @default(autoincrement())
  Nama             String    @db.VarChar(255)
  Email            String    @unique(map: "Email") @db.VarChar(255)
  Password         String    @db.VarChar(255)
  TanggalBergabung DateTime? @default(now()) @db.DateTime(0)
  comment          comment[]
  like             like[]
  post             post[]
  report           report[]
}
